package org.student.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import org.student.entity.Student;

//数据访问层：原子性 的增删改查
public class StudentDao {
	private final String URL  ="jdbc:oracle:thin:@127.0.0.1:1521:ORCL" ;
	private final String USERNAME  ="scott" ;
	private final String PASSWORD  ="tiger" ;
	
	public boolean isExist(int sno) {//true:此人存在  false:不存在
		return queryStudentBySno(sno)==null? false:true  ;
	}
	
	public boolean addStudent(Student student) {//zs 23 xa 
		 PreparedStatement pstmt = null ;
		Connection connection = null ;
		try {
			Class.forName("oracle.jdbc.OracleDriver") ;
			 connection = DriverManager.getConnection( URL,USERNAME,PASSWORD ) ;
			 String sql = "insert into student(sno,sname,sage,saddress) values(?,?,?,?) " ;
			  pstmt = connection.prepareStatement( sql) ;
			  pstmt.setInt(1,student.getSno() );
			  pstmt.setString(2,student.getSname());
			  pstmt.setInt(3,student.getSage() );
			  pstmt.setString(4,student.getSaddress() );
			  int count = pstmt.executeUpdate() ;
			  if(count>0)
				  return true ;
			  else 
				  return false ;
			  
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
			  return false ;
		} catch (SQLException e) {
			e.printStackTrace();
			  return false ;
		}catch (Exception e) {
			e.printStackTrace();
			return false ;
		}
		finally {
				try {
					if(pstmt!=null)pstmt.close();
					if(connection!=null)connection.close();
				} catch (SQLException e) {
					e.printStackTrace();
				} 
		}
	}
	
	
	
	//根据学号 查询学生
	public Student queryStudentBySno(int sno) {//3
		Student student = null;
		Connection connection = null ;
		 PreparedStatement pstmt = null ;
		  ResultSet rs = null ; 
		try {
			Class.forName("oracle.jdbc.OracleDriver") ;
			 connection = DriverManager.getConnection( URL,USERNAME,PASSWORD ) ;
			 String sql = "select * from student where sno =? " ;
			  pstmt = connection.prepareStatement( sql) ;
			  pstmt.setInt(1, sno);
			   rs = pstmt.executeQuery() ;
			  if(rs.next()) {
				  int no =   rs.getInt("sno") ;
				  String name =   rs.getString("sname") ;
				  int age =   rs.getInt("sage");
				  String address = rs.getString("saddress") ;
				  student = new Student(no,name,age,address);
			  }
			  return student ;
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
			return null ; 
		} catch (SQLException e) {
			e.printStackTrace();
			return null ; 
		}catch (Exception e) {
			e.printStackTrace();
			return null ; 
		}
		finally {
				try {
					if(rs!=null)rs.close();
					if(pstmt!=null)pstmt.close();
					if(connection!=null)connection.close();
				} catch (SQLException e) {
					e.printStackTrace();
				} 
		}
	}
	
}
